0 info it worked if it ends with ok
1 verbose cli [ '/usr/local/bin/node', '/usr/local/bin/npm', 'publish' ]
2 info using npm@3.10.7
3 info using node@v6.3.1
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec Result {
7 silly cache add   raw: '.',
7 silly cache add   scope: null,
7 silly cache add   escapedName: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: '/Applications/MAMP/htdocs/collection',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory /Users/dev8/.npm/doubly_linked_list/1.0.0/package.tgz not in flight; packing
9 verbose correctMkdir /Users/dev8/.npm correctMkdir not in flight; initializing
10 info lifecycle doubly_linked_list@1.0.0~prepublish: doubly_linked_list@1.0.0
11 silly lifecycle doubly_linked_list@1.0.0~prepublish: no script for prepublish, continuing
12 verbose tar pack [ '/Users/dev8/.npm/doubly_linked_list/1.0.0/package.tgz',
12 verbose tar pack   '/Applications/MAMP/htdocs/collection' ]
13 verbose tarball /Users/dev8/.npm/doubly_linked_list/1.0.0/package.tgz
14 verbose folder /Applications/MAMP/htdocs/collection
15 verbose addLocalTarball adding from inside cache /Users/dev8/.npm/doubly_linked_list/1.0.0/package.tgz
16 verbose correctMkdir /Users/dev8/.npm correctMkdir not in flight; initializing
17 silly cache afterAdd doubly_linked_list@1.0.0
18 verbose afterAdd /Users/dev8/.npm/doubly_linked_list/1.0.0/package/package.json not in flight; writing
19 verbose correctMkdir /Users/dev8/.npm correctMkdir not in flight; initializing
20 verbose afterAdd /Users/dev8/.npm/doubly_linked_list/1.0.0/package/package.json written
21 silly publish { name: 'doubly_linked_list',
21 silly publish   version: '1.0.0',
21 silly publish   description: 'Circular Doubly linked list implementation',
21 silly publish   main: 'index.js',
21 silly publish   directories: { example: 'example' },
21 silly publish   scripts: { test: 'echo "Error: no test specified" && exit 1' },
21 silly publish   keywords: [ 'list', 'linked list', 'data structure', 'Array' ],
21 silly publish   author: { name: 'Moussa Ndour', email: 'moussa_ndour@hotmail.fr' },
21 silly publish   license: 'ISC',
21 silly publish   dependencies: {},
21 silly publish   devDependencies: {},
21 silly publish   repository:
21 silly publish    { type: 'git',
21 silly publish      url: 'git+https://github.com/sidsonAidson/doubly_linked_list.git' },
21 silly publish   bugs: { url: 'https://github.com/sidsonAidson/doubly_linked_list/issues' },
21 silly publish   homepage: 'https://github.com/sidsonAidson/doubly_linked_list#readme',
21 silly publish   contributors: [ { name: '* Moussa Ndour', email: 'moussa_ndour@hotmail.fr' } ],
21 silly publish   readme: 'doubly_linked_list - Iterable Circular Doubly linked list implementation\n=====================================================\n\nIterable Circular Doubly linked list implementation.\nThe principle of a doubly-linked list is to keep for each element of the list a pointer to the previous element and to the next element.\n\n<a href="http://sidsonaidson.github.io/doubly_linked_list/">CDLinkedList</a>\n\n<img src="">\n![alt tag](https://raw.githubusercontent.com/sidsonAidson/doubly_linked_list/master/img/img2.png)\n\nIn this implementation we create special element, which will be the root of our list (also called sentinel).\n<a href="https://en.wikipedia.org/wiki/Sentinel_node">Sentinel on wikiPedia</a>\n\n This element will be both before the first element and after the last element. It is he who will allow us to quietly manipulate the list without risking anything.\n\n\n![alt tag](https://raw.githubusercontent.com/sidsonAidson/doubly_linked_list/master/img/img1.png)\n\nIn addition we have another element called "cursor" which a virtual element placed between two cells (an element of the chain), either between the first cell and the sentinel or between the last cell and the sentinel.\nType declaration can look like this in pseudo-code\n\n```\ncellule\n{\n    Value value;\n    cellule* next;\n    cellule* previous;\n};\n\ncursor\n{\n    cellule* after;\n    cellule* before;\n};\n\nCDLinkedList\n{\n    cellule* racine;//sentinel\n    cellule* cursorAfter;\n    cellule* cursorBefore;\n    ......\n    .....\n};\n\n\n```\n\n![alt tag](https://raw.githubusercontent.com/sidsonAidson/doubly_linked_list/master/img/img3.png)\n\nCDLinkedList is iterable and can be used with for..of :\n\n``` javascript\nlet myList = new CDLinkedList();\n...........\n.............\nfor(let elem of myList)\n{\n    console.log(elem)\n}\n...\n```\n\n * Tags: list, array, linked list\n\n\n##Performance\nComparison between Array and CDLinkedList.\nThe exercise consists in creating a sequence of size "length" and then removing the first element from it until it becomes empty (\'Shift Method\');\nSee the folder \'/ example /\'\nHere are the results:\n``` javascript\n............\nlet b = [];\nfor(let i = 0; i < length;i++)\n{\n    b.push({index:i});\n}\nfor(let i = 0; i < length ;i++)\n{\n   b.shift();\n}\n.........\n\nlet a = new CDLinkedList();\nfor(let i = 0; i < length;i++)\n{\n    a.push({index:i});\n}\nfor(let i = 0; i < length;i++)\n{\n   a.shift();\n}\n...........\n/// Result\n//{NumberElem:{res1:res, res2:res}}\n\n{"10.000":{"benchCDLinkedList":{"s":0,"ms":7.252621},"benchJsArray":{"s":0,"ms":8.156139}}}\n........\n{"50.000":{"benchCDLinkedList":{"s":0,"ms":15.221335},"benchJsArray":{"s":0,"ms":23.047444}}}\n........\n{"60.000":{"benchCDLinkedList":{"s":0,"ms":20.891216},"benchJsArray":{"s":11,"ms":568.639012}}}\n...........\n{"160000":{"benchCDLinkedList":{"s":0,"ms":133.833382},"benchJsArray":{"s":76,"ms":11.752886}}}\n...........\n{"190.000":{"benchCDLinkedList":{"s":0,"ms":134.712147},"benchJsArray":{"s":109,"ms":837.268698}}}\n........\n{"1.700.000":{"benchCDLinkedList":{"s":1,"ms":62.657239},"benchJsArray":{timeOut}}}\n........\n{"3.000.000":{"benchCDLinkedList":{"s":2,"ms":144.959251},"benchJsArray":{timeOut}}}\n........\n{"4.600.000":{"benchCDLinkedList":{"s":3,"ms":12.921694},"benchJsArray":{timeOut}}}\n........\n{"5300000":{"benchCDLinkedList":{"s":4,"ms":207.52613},"benchJsArray":{timeOut}}}\n........\n{"6.700.000":{"benchCDLinkedList":{"s":5,"ms":5.378216},"benchJsArray":{timeOut}}}\n\n\n```\n\n##Installation\n```\nnpm install doubly_linked_list\n```\n\n##Usage\n\n``` javascript\n\nlet manager = require(\'doubly_linked_list.js\');\n\nlet CDLinkedList = manager.CDLinkedList;\nlet Cursor = manager.Cursor;\nlet Cellule = manager.Cellule;\n\nlet a =  CDLinkedList.from(\'sidson aidson\', (el) => {\n    return el.charCodeAt(0);\n});\na.log();\na.insertAtEndSpread([19,20,21,22]);\na.log();\n\na.moveCursorToNext();\na.moveCursorToNext();\n\na.insertAfterCursor(2);\na.insertAfterCursor(3);\n\na.log();\n\na.moveCursorAtIndex(3);\nconsole.log(a.cursorBefore.value);\nconsole.log(a.cursorAfter.value);\na.insertAfterCursor(0);\na.log();\na.setAtIndex({},0);\na.log();\n\nconsole.log(a.getAtIndex(0));\n\n```\n##API\nSeveral of Array method are implemeted for CDLinkedList and take same params like their namesake Array method\n###Method\n``` javascript\n\n.concat,\n.every,\n.fill,\n.filter,\n.find,\n.findIndex,\n.forEach,\n.includes,\n.indexOf,\n.lastIndexOf,\n.map,\n.pop,\n.push,\n.reduce,\n.reduceRight,\n.shift,\n.slice,\n.some,\n.sort,\n.unshift\n```\n\n##Aditional addition:\n\n``` javascript\n.allIndexOf\n.toArray\n::from(iterable) // static method CDLinkedList.from([1,2,3]) return new Instance of CDLinkedList with predifined value\n```\n\n####.insertAfterCursor(value)\n+ Insert value after cursor position\n```\nlet a =  CDLinkedList.from([2,3,4]);\na.log(); // List <2, 3, 4>\na.moveCursorAtEnd();\na.insertAfterCursor(5);\na.log();// List <2, 3, 4, 5>\n```\n\n####.insertAtEnd(value)\n+ equivalent of ```push``` method\n```\nlet a =  CDLinkedList.from([2,3,4]);\na.log();//List <2, 3, 4>\na.moveCursorAtIndex(2);\na.insertAtEnd(8);// equivalent of a.push(8)\na.log();// List <2, 3, 4, 8>\n\n```\n\n\n####.insertAtEndSpread(iterableValue, [[fonctionMap],[ thisArgs]])\n+ insert multiple value at end\n```\nlet a =  CDLinkedList.from([2,3,4]);\na.log();//List <2, 3, 4>\na.moveCursorAtIndex(2);\na.insertAtEnd([8,9,10]);\na.log();// List <2, 3, 4, 8,9,10>\na.insertAtEndSpread([8,9,10], (el) => {\n    return String(el);\n});\na.log();// List <2, 3, 4, 8,9,10, \'8\',\'9\',\'10\'>\n\n```\n\n####.insertAtBegin(value)\n+ insert new elem at begin of list\n```\nlet a =  CDLinkedList.from([2,3,4]);\na.log();//List <2, 3, 4>\na.moveCursorAtIndex(2);\na.insertAtBegin(8);\na.log();// List <8,2, 3, 4>\n\n```\n\n####.insertAtBeginSpread(iterableValue, [[fonctionMap],[ thisArgs]])\n+ insert multiple value at begin of list\n```\nlet a =  CDLinkedList.from([2,3,4]);\na.log();//List <2, 3, 4>\na.moveCursorAtIndex(2);\na.insertAtBeginSpread(\'sidson aidson\', (el) => {\n   return el.charCodeAt(0)\n});\na.log(); // List <115, 105, 100, 115, 111, 110, 32, 97, 105, 100, 115, 111, 110, 2, 3, 4>\n\n```\n\n####.insertAtIndex(value, index)\n+ insert new elem at given index .Accept negative index\n```\nlet a =  CDLinkedList.from([2,3,4]);\na.log();//List <2, 3, 4>\na.insertAtIndex({h:12,b:23,l:45},2);\na.log();// List <2, 3, {h:12,b:23,l:45}, 4>\n\n```\n\n####.insertAtIndexSpread(iterableValue, index,[[fonctionMap],[ thisArgs]])\n+ insert new elem at given index .Accept negative index\n```\nlet a =  CDLinkedList.from([2,3,4]);\na.log();//List <2, 3, 4>\na.insertAtIndexSpread({h:12,b:23,l:45},2);\na.log();// List <2, 3, 12,23,45, 4>\n// not output diff between a.insertAtIndex({h:12,b:23,l:45},2);\n// and a.insertAtIndexSpread({h:12,b:23,l:45},2);\n\n```\n\n### .removeAfterCursor()\n+ remove element after cursor\n\n### .removeAtEnd()\n+ remove element at end of list(last). like `pop` method but return ```undefined```\n\n### .removeAtBegin()\n+ remove element at begin of list(first). like `shift` method but return ```undefined```\n\n### .removeAtIndex(index)\n+ remove element at index of list .\n\n###.clear()\n+ clear list\n\n###.moveCursorAtIndex(index)\n+ move cursor at given index\n\n###.getCursor()\n+ return current cursor state\n\n###.setCursor(cursor)\n+ restore cursor state\n\n###.moveCursorAtEnd()\n+ move cursor at end of list\n\n###.moveCursorAtBegin()\n+ move cursor at begin of list\n\n###.moveCursorToNext()\n+ move cursor to next elem\n\n###.moveCursorToPrevious()\n+ move cursor to previous elem\n\n###.setAfterCursor()\n+ set value of element after cursor\n``` javascript\nlet a =  CDLinkedList.from([2,3,4]);\na.log();//List <2, 3, 4>\na.insertAtIndex({},2);\na.log();// List <2, 3, {}, 4>\na.moveCursorAtIndex(0);\na.setAfterCursor(\'Hello\');\na.log()//List <\'Hello\', 3, 2, {}>\n```\n\n###.getAfterCursor()\n+ get elem after cursor\n\n\n###.getAtIndex()\n+ get elem at index\n\n###.getAtBegin()\n+ like ```shift``` but don\'t remove elem\n\n###.getAtEnd()\n+ like ```pop``` but don\'t remove elem\n\n###.setAtIndex()\n\n###.setAtEnd()\n\n###.setAtBegin()\n\n\n###.log()\n+ print list on stdout\n',
21 silly publish   readmeFilename: 'README.md',
21 silly publish   gitHead: '5a911110f9737a028f37d0099f31626d17210028',
21 silly publish   _id: 'doubly_linked_list@1.0.0',
21 silly publish   _shasum: '219b95edcf470fd538f81943ee7514d0857b873e',
21 silly publish   _from: '.' }
22 verbose getPublishConfig undefined
23 silly mapToRegistry name doubly_linked_list
24 silly mapToRegistry using default registry
25 silly mapToRegistry registry https://registry.npmjs.org/
26 silly mapToRegistry data Result {
26 silly mapToRegistry   raw: 'doubly_linked_list',
26 silly mapToRegistry   scope: null,
26 silly mapToRegistry   escapedName: 'doubly_linked_list',
26 silly mapToRegistry   name: 'doubly_linked_list',
26 silly mapToRegistry   rawSpec: '',
26 silly mapToRegistry   spec: 'latest',
26 silly mapToRegistry   type: 'tag' }
27 silly mapToRegistry uri https://registry.npmjs.org/doubly_linked_list
28 verbose publish registryBase https://registry.npmjs.org/
29 silly publish uploading /Users/dev8/.npm/doubly_linked_list/1.0.0/package.tgz
30 verbose request uri https://registry.npmjs.org/doubly_linked_list
31 verbose request sending authorization for write operation
32 info attempt registry request try #1 at 4:08:54 PM
33 verbose request using bearer token for auth
34 verbose request id 36a66d3fc5d859cd
35 http request PUT https://registry.npmjs.org/doubly_linked_list
36 http 403 https://registry.npmjs.org/doubly_linked_list
37 verbose headers { 'content-type': 'application/json',
37 verbose headers   'cache-control': 'max-age=300',
37 verbose headers   'content-length': '95',
37 verbose headers   'accept-ranges': 'bytes',
37 verbose headers   date: 'Thu, 08 Dec 2016 16:09:05 GMT',
37 verbose headers   via: '1.1 varnish',
37 verbose headers   connection: 'keep-alive',
37 verbose headers   'x-served-by': 'cache-lcy1126-LCY',
37 verbose headers   'x-cache': 'MISS',
37 verbose headers   'x-cache-hits': '0',
37 verbose headers   'x-timer': 'S1481213342.941544,VS0,VE2185',
37 verbose headers   vary: 'Accept-Encoding' }
38 verbose request invalidating /Users/dev8/.npm/registry.npmjs.org/doubly_linked_list on PUT
39 error publish Failed PUT 403
40 verbose stack Error: "You cannot publish over the previously published version 1.0.0." : doubly_linked_list
40 verbose stack     at makeError (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:264:12)
40 verbose stack     at CachingRegistryClient.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:252:14)
40 verbose stack     at Request._callback (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:172:14)
40 verbose stack     at Request.self.callback (/usr/local/lib/node_modules/npm/node_modules/request/request.js:187:22)
40 verbose stack     at emitTwo (events.js:106:13)
40 verbose stack     at Request.emit (events.js:191:7)
40 verbose stack     at Request.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1044:10)
40 verbose stack     at emitOne (events.js:96:13)
40 verbose stack     at Request.emit (events.js:188:7)
40 verbose stack     at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:965:12)
41 verbose statusCode 403
42 verbose pkgid doubly_linked_list
43 verbose cwd /Applications/MAMP/htdocs/collection
44 error Darwin 15.2.0
45 error argv "/usr/local/bin/node" "/usr/local/bin/npm" "publish"
46 error node v6.3.1
47 error npm  v3.10.7
48 error code E403
49 error "You cannot publish over the previously published version 1.0.0." : doubly_linked_list
50 error If you need help, you may report this error at:
50 error     <https://github.com/npm/npm/issues>
51 verbose exit [ 1, true ]
